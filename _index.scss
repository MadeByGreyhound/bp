////
/// Tom's SASS helpers
///
/// @author Greyhound Studio
////

@use "sass:map";
@use "sass:math";

$breakpoints: (
	"xs": 360px,
	"sm": 480px,
	"md": 768px,
	"lg": 1024px,
	"xl": 1280px,
	"xxl": 1600px,
	"xxxl": 1920px
) !default;

/// Generate a media query using one or two integers.
///
/// @access public
/// @param {int|null} $min [null] - min-media value.
/// @param {int|null} $max [null] - max-media value.
/// @output A media query built from the provided values.
/// @example scss
///   @include media( 480, 768 ) =>
///   @media only screen and (min-width: 480px) and (max-width: 767px) {}
@mixin media( $min: null, $max: null ) {
	// Make sure the queries don't overlap if using pixels
	@if $max and ( '' == math.unit( $max ) or 'px' == math.unit( $max ) ) {
		$max: $max - 1;
	}

	// Format values
	$min: if( $min and '' == math.unit( $min ), $min + "px", $min );
	$max: if( $max and '' == math.unit( $max ), $max + "px", $max );

	// Write media query
	@if $min and $max {
		@media only screen and (min-width: $min) and (max-width: $max) {
			@content;
		}
	} @else if $max {
		@media only screen and (max-width: $max) {
			@content;
		}
	} @else if $min {
		@media only screen and (min-width: $min) {
			@content;
		}
	}
}

/// Generate a media query using one or two breakpoint names.
///
/// The default breakpoints are:
/// - xs: 360
/// - sm: 480
/// - md: 768
/// - lg: 1024
/// - xl: 1280
/// - xxl: 1600
/// - xxxl: 1920
///
/// @access public
/// @param {string|null} $min [null] - min-media breakpoint.
/// @param {string|null} $max [null] - max-media breakpoint.
/// @output A media query built from the provided values.
/// @example scss
///   @include bp( sm, md ) =>
///   @media only screen and (min-width: 480px) and (max-width: 767px) {}
@mixin bp( $min: null, $max: null ) {
	$min: if( 'string' == type-of( $min ), map.get($breakpoints, $min), $min );
	$max: if( 'string' == type-of( $max ), map.get($breakpoints, $max), $max );

	@include media( $min, $max ) {
		@content;
	}
}
